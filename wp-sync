#!/bin/bash
#|--------------------------------------------------------------------------
# WordPress Migration Helper
# By Layer 7 Hosting Inc.
#
# Written by Simon Bouchard <sbouchard@layer7.email>
# Created: June 2023
# Updated: N/A
#
# You may use, modify, and redistribute this script freely
#
#|--------------------------------------------------------------------------

#|--------------------------------------------------------------------------
#| Colors
#|--------------------------------------------------------------------------

RED='\033[0;91m'
GREEN='\033[0;92m'
CYAN='\033[0;96m'
YELLOW='\033[0;93m'
PURPLE='\033[0;95m'
BLUE='\033[0;94m'
BOLD='\033[1m'
NC='\033[0m'

#|--------------------------------------------------------------------------
#| Options
#|--------------------------------------------------------------------------

# Variables
ANSWERS_FILE=".migration-answers"
DATE=$(date +"%Y-%m-%d_%H-%M-%S")
DB_FILE="database-source-$DATE.sql"

# Default values
LOCAL_HPATH=
LOCAL_PPATH=
LOCAL_SITE_URL=
LOCAL_DO_NOT_COPY="'wp-config.php','wordfence.php','wordfence-waf.php','.user.ini','error_log','wp-content/debug.log','wp-content/object-cache.php','wp-content/advanced-cache.php','wp-content/rcwp-redis-config.php'"
REMOTE_HPATH=
REMOTE_PPATH=
REMOTE_SERVER=
REMOTE_PORT="22"
REMOTE_USER=
REMOTE_SITE_URL=
RSYNC_OPTIONS=(-Pavz --info=progress2 --delete --exclude={$LOCAL_DO_NOT_COPY})

#|--------------------------------------------------------------------------
#| Wizard
#|--------------------------------------------------------------------------

wizard () {

        # Load previous answers, if they exist
        if [ -f "$ANSWERS_FILE" ]; then

                # Read previous answers
                i=1
                while read -r line; do
                        case $i in
                        1) LOCAL_HPATH=$line ;;
                        2) LOCAL_PPATH=$line ;;
                        3) LOCAL_SITE_URL=$line ;;
                        4) LOCAL_DO_NOT_COPY=$line ;;
                        5) REMOTE_HPATH=$line ;;
                        6) REMOTE_PPATH=$line ;;
                        7) REMOTE_SERVER=$line ;;
                        8) REMOTE_PORT=$line ;;
                        9) REMOTE_USER=$line ;;
                        10) REMOTE_SITE_URL=$line ;;
                        *) ;;
                        esac
                        i=$((i+1))
                done < $ANSWERS_FILE
        fi

        # Read answers from user input
        printf "\n${PURPLE}${BOLD}WP-Sync${NC}"
        printf "\n${PURPLE}WordPress Migration Helper${NC}"
        printf "\n${PURPLE}By Layer 7 Web Hosting Inc.${NC}\n\n"
        printf "Current WordPress path: ${CYAN}%s${NC}\n" "$(pwd)"
        if command -v wp > /dev/null; then
                printf "Current WordPress URL: ${CYAN}%s${NC}\n" "$(wp option get siteurl)"
        else
                printf "Current WordPress URL: ${CYAN}WP-CLI not installed${NC}\n"
        fi 
        printf "\n"

        echo -e "[${BLUE}?${NC}] Source absolute home path: [${CYAN}$LOCAL_HPATH${NC}]:" 
        read NEW_LOCAL_HPATH
        LOCAL_HPATH=${NEW_LOCAL_HPATH:-$LOCAL_HPATH}
        echo "$LOCAL_HPATH" > $ANSWERS_FILE

        echo -e "[${BLUE}?${NC}] Source absolute public path: [${CYAN}$LOCAL_PPATH${NC}]:" 
        read NEW_LOCAL_PPATH
        LOCAL_PPATH=${NEW_LOCAL_PPATH:-$LOCAL_PPATH}
        echo "$LOCAL_PPATH" >> $ANSWERS_FILE

        echo -e "[${BLUE}?${NC}] Source site URL: [${CYAN}$LOCAL_SITE_URL${NC}]:" 
        read NEW_LOCAL_SITE_URL
        LOCAL_SITE_URL=${NEW_LOCAL_SITE_URL:-$LOCAL_SITE_URL}
        echo "$LOCAL_SITE_URL" >> $ANSWERS_FILE

        echo -e "[${BLUE}?${NC}] Excluded files: [${CYAN}$LOCAL_DO_NOT_COPY${NC}]:" 
        read NEW_LOCAL_DO_NOT_COPY
        LOCAL_DO_NOT_COPY=${NEW_LOCAL_DO_NOT_COPY:-$LOCAL_DO_NOT_COPY}
        echo "$LOCAL_DO_NOT_COPY" >> $ANSWERS_FILE

        echo -e "[${BLUE}?${NC}] Destination absolute home path: [${CYAN}$REMOTE_HPATH${NC}]:" 
        read NEW_REMOTE_HPATH
        REMOTE_HPATH=${NEW_REMOTE_HPATH:-$REMOTE_HPATH}
        echo "$REMOTE_HPATH" >> $ANSWERS_FILE

        echo -e "[${BLUE}?${NC}] Destination absolute public path: [${CYAN}$REMOTE_PPATH${NC}]:" 
        read NEW_REMOTE_PPATH
        REMOTE_PPATH=${NEW_REMOTE_PPATH:-$REMOTE_PPATH}
        echo "$REMOTE_PPATH" >> $ANSWERS_FILE

        echo -e "[${BLUE}?${NC}] Destination server hostname/IPv4: [${CYAN}$REMOTE_SERVER${NC}]:" 
        read NEW_REMOTE_SERVER
        REMOTE_SERVER=${NEW_REMOTE_SERVER:-$REMOTE_SERVER}
        echo "$REMOTE_SERVER" >> $ANSWERS_FILE

        echo -e "[${BLUE}?${NC}] Destination server port: [${CYAN}$REMOTE_PORT${NC}]:" 
        read NEW_REMOTE_PORT
        REMOTE_PORT=${NEW_REMOTE_PORT:-$REMOTE_PORT}
        echo "$REMOTE_PORT" >> $ANSWERS_FILE

        echo -e "[${BLUE}?${NC}] Destination server username: [${CYAN}$REMOTE_USER${NC}]:" 
        read NEW_REMOTE_USER
        REMOTE_USER=${NEW_REMOTE_USER:-$REMOTE_USER}
        echo "$REMOTE_USER" >> $ANSWERS_FILE

        echo -e "[${BLUE}?${NC}] Destination site URL: [${CYAN}$REMOTE_SITE_URL${NC}]:" 
        read NEW_REMOTE_SITE_URL
        REMOTE_SITE_URL=${NEW_REMOTE_SITE_URL:-$REMOTE_SITE_URL}
        echo "$REMOTE_SITE_URL" >> $ANSWERS_FILE

        echo -ne "
#|--------------------------------------------------------------------------
#
# Here's a summary of the migration informations before continuing:
# 
# Source absolute home path: ${CYAN}$LOCAL_HPATH${NC}
# Source absolute public path: ${CYAN}$LOCAL_PPATH${NC}
# Source site URL: ${CYAN}$LOCAL_SITE_URL${NC}
# Excluded files: ${CYAN}$LOCAL_DO_NOT_COPY${NC}
# Destination absolute home path: ${CYAN}$REMOTE_HPATH${NC}
# Destination absolute public path: ${CYAN}$REMOTE_PPATH${NC}
# Destination server hostname/IPv4: ${CYAN}$REMOTE_SERVER${NC}
# Destination server port: ${CYAN}$REMOTE_PORT${NC}
# Destination server username: ${CYAN}$REMOTE_USER${NC}
# Destination site URL: ${CYAN}$REMOTE_SITE_URL${NC}
#
# ${RED}WARNING${NC} 
# This will overwrite the existing remote WordPress installation with the current installation.
# The remote WordPress database will be backed up in the ${CYAN}$REMOTE_HPATH${NC} directory in case of a problem.
#
#|--------------------------------------------------------------------------
"
        while true; do
        echo -e "\n[${RED}?${NC}] Do you want to continue? (YES/NO)"
        read confirm
        confirm=$(echo "$confirm" | tr '[:lower:]' '[:upper:]')  # convert to uppercase
        if [[ $confirm == "NO" ]]; then
                echo -e "\n[${RED}✗${NC}] Aborting..."
                exit 1
        elif [[ $confirm == "YES" ]]; then
                echo -e "\n[${PURPLE}i${NC}] Starting the migration ..."
                sleep 2
                execute_migration
        else
                echo -e "[${BLUE}i${NC}] Please enter YES or NO."
        fi
        done 
 
}

execute_migration () {

        # Datatabse dump
        echo -e "[${PURPLE}i${NC}] Dumping the database: ${DB_FILE} ..."
        wp db export $LOCAL_HPATH/$DB_FILE --single-transaction --quick --lock-tables=false --path=$LOCAL_PPATH &> /dev/null
        echo -e "[${GREEN}✓${NC}] Completed ..."

        # Copy files
        echo -e "[${PURPLE}i${NC}] Copying files ..."
        RSYNC_COMMAND="rsync ${RSYNC_OPTIONS[@]} -e 'ssh -p $REMOTE_PORT' $LOCAL_PPATH/ $REMOTE_USER@$REMOTE_SERVER:$REMOTE_PPATH"
        eval $RSYNC_COMMAND
        echo -e "[${GREEN}✓${NC}] Completed ..."

        # Copy database (important: must be AFTER the rsync command... otherwise, it could get deleted)
        echo -e "[${PURPLE}i${NC}] Copying the database: ${DB_FILE} to remote server ..."
        scp -r -P $REMOTE_PORT $LOCAL_HPATH/$DB_FILE $REMOTE_USER@$REMOTE_SERVER:$REMOTE_HPATH &> /dev/null
        rm $LOCAL_HPATH/$DB_FILE &> /dev/null
        echo -e "[${GREEN}✓${NC}] Completed ..."

        echo -e "[${PURPLE}i${NC}] Setting up remote environment ${REMOTE_SITE_URL} ..."
        if command -v wp > /dev/null; then
                ssh $REMOTE_USER@$REMOTE_SERVER -p $REMOTE_PORT /bin/bash << EOF
                cd $REMOTE_PPATH
                wp db export $REMOTE_HPATH/database-destination-$DATE.sql
                wp db reset --yes
                wp db import $REMOTE_HPATH/$DB_FILE
                wp search-replace $LOCAL_SITE_URL $REMOTE_SITE_URL --all-tables
                wp elementor replace-urls $LOCAL_SITE_URL $REMOTE_SITE_URL
                wp elementor flush-css
                wp cache flush --yes
EOF
        else
                ssh $REMOTE_USER@$REMOTE_SERVER -p $REMOTE_PORT /bin/bash << EOF
                cd $REMOTE_PPATH
                wp db export $REMOTE_HPATH/database-destination-$DATE.sql
                wp db reset --yes
                wp db import $REMOTE_HPATH/$DB_FILE
                wp search-replace $LOCAL_SITE_URL $REMOTE_SITE_URL --all-tables
                wp cache flush --yes
EOF
        fi

        echo -e "\n[${GREEN}✓${NC}] Migration completed successfully!"
        echo -e "[${PURPLE}i${NC}] View your site at ${PURPLE}$REMOTE_SITE_URL${NC}\n"
        exit 1

}

#|--------------------------------------------------------------------------
#| Execute
#|--------------------------------------------------------------------------

wizard